# Generated by Django 5.0.7 on 2024-07-29 10:32

from django.db import migrations, models
from django.contrib.postgres.search import SearchVectorField
from django.contrib.postgres.indexes import GinIndex

class Migration(migrations.Migration):

    dependencies = [
        ('products', '0005_favorite'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='subcategory',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='product',
            name='characteristics',
        ),
        migrations.RemoveField(
            model_name='product',
            name='main_image',
        ),
        migrations.RemoveField(
            model_name='product',
            name='quantity',
        ),
        migrations.RemoveField(
            model_name='product',
            name='seller',
        ),
        migrations.AddField(
            model_name='category',
            name='name_en',
            field=models.CharField(max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='category',
            name='name_ru',
            field=models.CharField(max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='product',
            name='description_en',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='description_ru',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='name_en',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='name_ru',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='subcategory',
            name='name_en',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='subcategory',
            name='name_ru',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='product',
            name='search_vector',
            field=SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_pr_name_9ff0a3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='products_pr_price_9b1a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='products_pr_created_52f0d7_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=GinIndex(fields=['search_vector'], name='product_search_idx'),
        ),
        migrations.AddIndex(
            model_name='subcategory',
            index=models.Index(fields=['name'], name='products_su_name_4ac726_idx'),
        ),
        migrations.RunSQL(
            sql='''
            CREATE FUNCTION products_product_trigger() RETURNS trigger AS $$
            begin
              new.search_vector :=
                setweight(to_tsvector('pg_catalog.english', coalesce(new.name,'')), 'A') ||
                setweight(to_tsvector('pg_catalog.english', coalesce(new.description,'')), 'B');
              return new;
            end
            $$ LANGUAGE plpgsql;

            CREATE TRIGGER products_product_update_trigger
            BEFORE INSERT OR UPDATE ON products_product
            FOR EACH ROW EXECUTE FUNCTION products_product_trigger();
            ''',
            reverse_sql='''
            DROP TRIGGER IF EXISTS products_product_update_trigger ON products_product;
            DROP FUNCTION IF EXISTS products_product_trigger();
            '''
        ),
    ]